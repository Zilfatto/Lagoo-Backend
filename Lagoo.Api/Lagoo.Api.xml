<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lagoo.Api</name>
    </assembly>
    <members>
        <member name="T:Lagoo.Api.Common.Extensions.AuthServiceCollectionExtensions">
            <summary>
              Authentication and Authorization extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="T:Lagoo.Api.Common.Extensions.AutoGeneratedApiServiceCollectionExtensions">
            <summary>
              Auto generated API extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="T:Lagoo.Api.Common.Extensions.CustomCorsServiceCollectionExtensions">
            <summary>
              Custom CORS extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>
            </summary>
        </member>
        <member name="T:Lagoo.Api.Common.Extensions.CustomExceptionHandlerAppBuilderExtensions">
            <summary>
              Custom exception handler extenstion method for <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>
            </summary>
        </member>
        <member name="T:Lagoo.Api.Common.Middlewares.CustomExceptionHandlerMiddleware">
            <summary>
              A middleware for appropriate handling of thrown custom exceptions in the app
            </summary>
        </member>
        <member name="M:Lagoo.Api.Controllers.AccountsController.RegisterUser(Lagoo.BusinessLogic.CommandsAndQueries.Accounts.Commands.RegisterUser.RegisterUserCommand)">
            <summary>
              Register a user in the app, optionally via an external authentication
            </summary>
            <param name="command">User data for registration</param>
            <returns>Access and Refresh tokens, and their expiration dates</returns>
        </member>
        <member name="M:Lagoo.Api.Controllers.AccountsController.LoginUser(Lagoo.BusinessLogic.CommandsAndQueries.Accounts.Commands.LoginUser.LoginUserCommand)">
            <summary>
              Login a user in the app
            </summary>
            <param name="command">User data to login in the app</param>
            <returns>Access and Refresh tokens, and their expiration dates</returns>
        </member>
        <member name="M:Lagoo.Api.Controllers.AccountsController.LoginUserViaExternalAuthService(Lagoo.BusinessLogic.CommandsAndQueries.Accounts.Commands.LoginUserViaExternalService.LoginUserViaExternalServiceCommand)">
            <summary>
              Login a user via any supported external authentication service
            </summary>
            <param name="command">External authentication service, its access token and an optional refresh token if exists on a device</param>
            <returns>Access and Refresh tokens, and their expiration dates</returns>
        </member>
        <member name="M:Lagoo.Api.Controllers.AccountsController.GetExternalAuthServiceUserInfo(Lagoo.BusinessLogic.CommandsAndQueries.Accounts.Queries.GetExternalAuthServiceUserInfo.GetExternalAuthServiceUserInfoQuery)">
            <summary>
              Get user information from specified external authentication service
            </summary>
            <param name="query">External authentication service and access token to it</param>
            <returns>User info from specified external authentication service</returns>
        </member>
        <member name="M:Lagoo.Api.Controllers.AccountsController.RefreshAccessToken(Lagoo.BusinessLogic.CommandsAndQueries.Accounts.Commands.RefreshAccessToken.RefreshAccessTokenCommand)">
            <summary>
              Refresh access token using refresh token for further access to guarded endpoints
            </summary>
            <param name="command">Expired Access token and Refresh token</param>
            <returns>New Access token</returns>
        </member>
    </members>
</doc>
